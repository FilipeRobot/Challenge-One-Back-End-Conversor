/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/MDIApplication.java to edit this template
 */
package com.github.filiperobot.challengeonebackendconversor;

import com.github.filiperobot.challengeonebackendconversor.controllers.AppController;
import com.github.filiperobot.challengeonebackendconversor.views.ConversorDeMoedasView;
import com.github.filiperobot.challengeonebackendconversor.views.ConversorDeTemperaturaView;
import com.github.filiperobot.challengeonebackendconversor.views.componests.JFrameAboutMenuInformations;

import javax.swing.JInternalFrame;
import java.awt.Dimension;

/**
 * @author FilipeRobot
 * @GitHub <a href="https://github.com/FilipeRobot">GitHub Profile</a>
 */
public class App extends javax.swing.JFrame {

    private final AppController appController;

    // TODO ativar(true) para ambiente de desenvolvimento, desativar(false) para uso normal do programa
    private final boolean DEV = false;

    /**
     * Creates new form App
     */
    public App() {
        this.appController = new AppController();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        conversoresMenu = new javax.swing.JMenu();
        MenuItemConversorDeMoedas = new javax.swing.JMenuItem();
        MenuItemConversorDeTemperatura = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Challenge One - Back End");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }

            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        fileMenu.setMnemonic('a');
        fileMenu.setText("Arquivo");
        fileMenu.add(jSeparator1);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        conversoresMenu.setMnemonic('c');
        conversoresMenu.setText("Conversores");

        MenuItemConversorDeMoedas.setMnemonic('m');
        MenuItemConversorDeMoedas.setText("Conversor de Moedas");
        MenuItemConversorDeMoedas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemConversorDeMoedasActionPerformed(evt);
            }
        });
        conversoresMenu.add(MenuItemConversorDeMoedas);

        MenuItemConversorDeTemperatura.setText("Conversor de temperatura");
        MenuItemConversorDeTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemConversorDeTemperaturaActionPerformed(evt);
            }
        });
        conversoresMenu.add(MenuItemConversorDeTemperatura);

        menuBar.add(conversoresMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Ajuda");

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("Sobre");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(desktopPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(desktopPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        this.formWindowClosing(null);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void MenuItemConversorDeMoedasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemConversorDeMoedasActionPerformed
        ConversorDeMoedasView conversorDeMoedas = new ConversorDeMoedasView();

        this.colocarNoCentro(conversorDeMoedas);

        this.desktopPane.add(conversorDeMoedas);
        conversorDeMoedas.setVisible(true);
        conversorDeMoedas.toFront();
    }//GEN-LAST:event_MenuItemConversorDeMoedasActionPerformed

    private void colocarNoCentro(JInternalFrame internalFrame) {
        Dimension desktopPaneSize = this.desktopPane.getSize();
        Dimension jInternalFrameSize = internalFrame.getSize();
        internalFrame.setLocation((desktopPaneSize.width - jInternalFrameSize.width) / 2, (desktopPaneSize.height - jInternalFrameSize.height) / 2);
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.DEV) {
            appController.fechar(true);
        }
        appController.fecharApp(this);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (this.DEV) {
//            MenuItemConversorDeMoedasActionPerformed(null);
            MenuItemConversorDeTemperaturaActionPerformed(null);
        }
    }//GEN-LAST:event_formWindowOpened

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        JFrameAboutMenuInformations frame = new JFrameAboutMenuInformations();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void MenuItemConversorDeTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemConversorDeTemperaturaActionPerformed
        ConversorDeTemperaturaView conversorDeTemperatura = new ConversorDeTemperaturaView();

        this.colocarNoCentro(conversorDeTemperatura);

        this.desktopPane.add(conversorDeTemperatura);
        conversorDeTemperatura.setVisible(true);
        conversorDeTemperatura.toFront();
    }//GEN-LAST:event_MenuItemConversorDeTemperaturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuItemConversorDeMoedas;
    private javax.swing.JMenuItem MenuItemConversorDeTemperatura;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenu conversoresMenu;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
